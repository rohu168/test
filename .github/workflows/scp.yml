name: build-and-deploy
on:
 # push:
 #   branches:
 #     - master
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: seed-r20.3.19-20200405-withouDocker.config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai
  UPLOAD_TO_N1: false
  # 注意设【AUTORSETOP】为true,【UPLOAD_TO_N1】也要为true
  AUTORSETOP: false
  SENDMSG: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      

      - name: SSH connection to Actions
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.UPDOAD_N1 }}
          HOST: ${{ secrets.HOST }}
          USER: root
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          PORT: ${{ secrets.PORT }}
          HOME_PATH: /root/ccx
        uses: P3TERX/debugger-action@master
        if: env.SSH_ACTIONS == 'true'
      
      - name: 上传固件到N1
        if: env.UPLOAD_TO_N1 == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          # rm: 1 # 上传前先清空目录
          # source: "openwrt/bin/targets/armvirt/64/*.config{,.md5}"
          source: "openwrt/bin/targets/*/*/*.config,openwrt/bin/targets/*/*/*.config.md5"
          # source: "./${FIRMWARENAME}"
          target: "ccx"
          strip_components: 5

      - name: 自动更新N1固件
        if: env.AUTORSETOP == 'true' 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: REPO_URL,REPO_BRANCH,CONFIG_FILE
          script: |
            cd test 
            export REPO_URL REPO_BRANCH CONFIG_FILE
            (bash test.sh &)

      - name: WeChat notification
        if: env.SENDMSG == 'true'
        run: 
          if [ ${AUTORSETOP} = "true" ];then;
          curl -d "text=kkk&desp=${REPO_URL}%0D%0A${REPO_BRANCH}%0D%0A%0D%0A${CONFIG_FILE}" https://sc.ftqq.com/${{ secrets.SCKEY }}.send;
          else;
          curl -d "text=更新失败！" https://sc.ftqq.com/${{ secrets.SCKEY }}.send;
          fi;
        shell: bash